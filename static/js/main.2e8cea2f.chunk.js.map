{"version":3,"sources":["mappings.js","utils/generators.js","App.js","serviceWorker.js","index.js"],"names":["allMappings","0","1","2","3","4","5","6","7","8","9","nricFactory","_randomNumber","Math","floor","random","_buildDigits","nric","length","_calculatePrefix","digits","weights","checksum","split","reduce","a","b","index","String","fromCharCode","newNric","prefixDigits","prefix","Slim","styled","div","Fat","Blank","Container","MainContainer","mapping","mapToBlocks","sequence","map","i","idx","React","createElement","key","StartStopSequence","code39Mappings","App","useState","toConvert","setToConvert","setPrefix","onClick","toUpperCase","char","type","value","onChange","e","test","target","maxlength","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2e8cea2f.chunk.js","sourcesContent":["const alphabetMappings = {\n    'A': [1, 0, 0, 2, 0, 1],\n    'B': [0, 1, 0, 2, 0, 1],\n    'C': [1, 1, 0, 2, 0, 0],\n    'D': [0, 0, 1, 2, 0, 1],\n    'E': [1, 0, 1, 2, 0, 0],\n    'F': [0, 1, 1, 2, 0, 0],\n    'G': [0, 0, 0, 2, 1, 1],\n    'H': [1, 0, 0, 2, 1, 0],\n    'I': [0, 1, 0, 2, 1, 0],\n    'J': [0, 0, 1, 2, 1, 0],\n    'K': [1, 0, 0, 0, 2, 1],\n    'L': [0, 1, 0, 0, 2, 1],\n    'M': [1, 1, 0, 0, 2, 0],\n    'N': [0, 0, 1, 0, 2, 1],\n    'O': [1, 0, 1, 0, 2, 0],\n    'P': [0, 1, 1, 0, 2, 0],\n    'Q': [0, 0, 0, 1, 2, 1],\n    'R': [1, 0, 0, 1, 2, 0],\n    'S': [0, 1, 0, 1, 2, 0],\n    'T': [0, 0, 1, 1, 2, 0],\n    'U': [1, 2, 0, 0, 0, 1],\n    'V': [0, 2, 1, 0, 0, 1],\n    'W': [1, 2, 1, 0, 0, 0],\n    'X': [0, 2, 0, 1, 0, 1],\n    'Y': [1, 2, 0, 1, 0, 0],\n    'Z': [0, 2, 1, 1, 0, 0],\n}\n\n\nconst numericMappings = {\n    0: [0, 0, 2, 1, 1, 0],\n    1: [1, 0, 2, 0, 0, 1],\n    2: [0, 1, 2, 0, 0, 1],\n    3: [1, 1, 2, 0, 0, 0],\n    4: [0, 0, 2, 1, 0, 1],\n    5: [1, 0, 2, 1, 0, 0],\n    6: [0, 1, 2, 1, 0, 0],\n    7: [0, 0, 2, 0, 1, 1],\n    8: [1, 0, 2, 0, 1, 0],\n    9: [0, 1, 2, 0, 1, 0],\n}\n\nconst symbolMappings = {\n    '*': [0, 2, 0, 1, 1, 0],\n    ' ': [0, 2, 1, 0, 1, 0],\n    '-': [0, 2, 0, 0, 1, 1],\n}\n\nconst allMappings = {\n    ...alphabetMappings,\n    ...numericMappings,\n    ...symbolMappings\n}\n\nexport default allMappings","export const nricFactory = (() => {\n\n    const _randomNumber = () => {\n        return Math.floor(Math.random() * 10);\n    }\n\n    const _buildDigits = (nric = '') => {\n        while (nric.length < 7) {\n            nric += _randomNumber()\n        }\n        return nric\n    }\n\n    const _calculatePrefix = (digits) => {\n        const weights = [\n            2,\n            7,\n            6,\n            5,\n            4,\n            3,\n            2\n        ]\n\n        const checksum = digits.split('').reduce((a, b, index) => a + b * weights[index], 0)\n\n        return String.fromCharCode(75 - checksum % 11 === 74 ? 90 : 75 - checksum % 11 === 75 ? 74 : 75 - checksum % 11)\n    }\n\n    const newNric = (prefixDigits = '') => {\n        const digits = _buildDigits(prefixDigits)\n        const prefix = _calculatePrefix(digits)\n        return `S${digits}${prefix}`\n    }\n\n    return {\n        newNric\n    }\n})()","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport code39Mappings from './mappings'\nimport { nricFactory } from './utils/generators'\n\n\nconst Slim = styled.div`\n  width: 1px;\n  height: 30px;\n  background-color: black;\n  margin-right: 1px;\n`\n\nconst Fat = styled.div`\n  width: 3px;\n  height: 30px;\n  background-color: black;\n  margin-right: 1px;\n`\n\nconst Blank = styled.div`\n  width: 2px;\n  height: 30px;\n  background-color: white;\n`\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 50px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2)\n`\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 30px;\n`\n\n\nconst mapping = {\n  0: Slim,\n  1: Fat,\n  2: Blank\n}\n\nconst mapToBlocks = (sequence) => {\n  /**\n   * 0: slim block\n   * 1: fat block\n   * 2: blank\n   * @params sequence: Array\n   */\n  return sequence.map((i, idx) => React.createElement(mapping[i], { key: idx }))\n}\n\n\nconst StartStopSequence = () => (\n  mapToBlocks(code39Mappings['*'])\n)\n\nconst App = () => {\n\n  const [toConvert, setToConvert] = useState('')\n  const [prefix, setPrefix] = useState('')\n\n  const handleChange = ({ target: { value } }) => {\n    const upperValue = value.toUpperCase();\n    const isValidChar = Object.keys(code39Mappings).indexOf(upperValue.substr(-1)) !== -1 || upperValue === '';\n    if (isValidChar) setToConvert(upperValue)\n  }\n\n  return (\n    <MainContainer>\n\n\n      <Container\n        onClick={() => setToConvert(nricFactory.newNric(prefix))}\n      >\n        <StartStopSequence />\n        {\n          toConvert.toUpperCase().split('').map(\n            char => {\n              return (\n                mapToBlocks(code39Mappings[char])\n              )\n            }\n          )\n        }\n        <StartStopSequence />\n      </Container>\n\n      <h3>Enter a prefix (optional):</h3>\n      <input\n        type=\"text\"\n        value={prefix}\n        onChange={e => {\n          /^\\d+$/.test(e.target.value) && setPrefix(e.target.value)\n        }}\n        maxlength=\"7\"\n      />\n      <p>{\n        toConvert\n      }</p>\n\n    </MainContainer>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register()"],"sourceRoot":""}